input: w[ 1, ..., n], v[ 1, ..., n], V, B

define w = sum(w[i] * x[i]) where x[i] is in {0, 1}
define P(n, B) is the solution to the problem with n items, each with w[i] and v[i], 
        and the knapsack capacity B

for w = 0 to B
    P(0, w) <- 0
for i = 0 to n
    for w = 0 to B
        if w[i] > w
            P(i, w) <- P(i - 1, w)
        else
            P(i, w) = max { P(i - 1, w), v[i] + P(i - 1, w - w[i])}
if P(n, B) > V
    return true
else
    return false
